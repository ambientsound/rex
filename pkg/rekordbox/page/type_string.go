// Code generated by "stringer -type=Type"; DO NOT EDIT.

package page

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Type_Tracks-0]
	_ = x[Type_Genres-1]
	_ = x[Type_Artists-2]
	_ = x[Type_Albums-3]
	_ = x[Type_Labels-4]
	_ = x[Type_Keys-5]
	_ = x[Type_Colors-6]
	_ = x[Type_PlaylistTree-7]
	_ = x[Type_PlaylistEntries-8]
	_ = x[Type_Unknown9-9]
	_ = x[Type_Unknown10-10]
	_ = x[Type_HistoryPlaylists-11]
	_ = x[Type_HistoryEntries-12]
	_ = x[Type_Artwork-13]
	_ = x[Type_Unknown14-14]
	_ = x[Type_Unknown15-15]
	_ = x[Type_Columns-16]
	_ = x[Type_Unknown17-17]
	_ = x[Type_Unknown18-18]
	_ = x[Type_History-19]
}

const _Type_name = "Type_TracksType_GenresType_ArtistsType_AlbumsType_LabelsType_KeysType_ColorsType_PlaylistTreeType_PlaylistEntriesType_Unknown9Type_Unknown10Type_HistoryPlaylistsType_HistoryEntriesType_ArtworkType_Unknown14Type_Unknown15Type_ColumnsType_Unknown17Type_Unknown18Type_History"

var _Type_index = [...]uint16{0, 11, 22, 34, 45, 56, 65, 76, 93, 113, 126, 140, 161, 180, 192, 206, 220, 232, 246, 260, 272}

func (i Type) String() string {
	if i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
